---
description: 
globs: 
alwaysApply: false
---
# Project Structure Guide

This project is organized as follows:

- The main Django app is in [`app/`](mdc:app), containing models, views, admin, and migrations.
- The [`backend_try/`](mdc:backend_try) directory contains Django project-level settings and entry points like `settings.py`, `urls.py`, `wsgi.py`, and `asgi.py`.
- The [`relate/`](mdc:relate) directory contains scripts and modules for map and database operations, including [`viewmap.py`](mdc:relate/viewmap.py), [`read_dbdata.py`](mdc:relate/read_dbdata.py), and more. It also contains subdirectories for map data and databases.
- The [`map/`](mdc:map) and [`relate/map/`](mdc:relate/map) directories store GeoJSON and CSV files for mapping and spatial data.
- The [`templates/`](mdc:templates) directory contains HTML templates for the web interface.
- The [`static/`](mdc:static) and [`staticfiles/`](mdc:staticfiles) directories contain static assets (JS, CSS, fonts, images) for the frontend, including third-party libraries and custom scripts/styles.
- The project root contains configuration and entry-point files such as [`manage.py`](mdc:manage.py), [`Dockerfile`](mdc:Dockerfile), [`docker-compose.yml`](mdc:docker-compose.yml), [`requirements.txt`](mdc:requirements.txt), and [`parking.conf`](mdc:parking.conf).

Use this guide to quickly locate key components and understand the high-level structure of the project.
